// <auto-generated />
using System;
using ApiForBaseWeaknesses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiForBaseWeaknesses.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250711145042_AddDataBaseVulnerabilities")]
    partial class AddDataBaseVulnerabilities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.CvssMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("BaseScore")
                        .HasColumnType("double precision")
                        .HasColumnName("base_score");

                    b.Property<string>("Vector")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("vector");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("version");

                    b.Property<int>("VulnerabilityId")
                        .HasColumnType("integer")
                        .HasColumnName("vulnerability_id");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("cvss_metrics", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Host", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("ip");

                    b.HasKey("Id");

                    b.HasIndex("Ip")
                        .IsUnique();

                    b.ToTable("hosts", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("source");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.Property<int>("VulnerabilityId")
                        .HasColumnType("integer")
                        .HasColumnName("vulnerability_id");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("references", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Scan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("HostId")
                        .HasColumnType("integer")
                        .HasColumnName("host_id");

                    b.Property<DateTime>("ScannedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("scanned_at");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("scans", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.ScanVulnerability", b =>
                {
                    b.Property<int>("ScanId")
                        .HasColumnType("integer")
                        .HasColumnName("scan_id");

                    b.Property<int>("VulnerabilityId")
                        .HasColumnType("integer")
                        .HasColumnName("vulnerability_id");

                    b.HasKey("ScanId", "VulnerabilityId");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("scan_vulnerability", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Vulnerability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<DateTime>("Published")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("published");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("vulnerabilities", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.CvssMetric", b =>
                {
                    b.HasOne("ApiForBaseWeaknesses.Models.Vulnerability", "Vulnerability")
                        .WithMany("CvssMetrics")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vulnerability");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Reference", b =>
                {
                    b.HasOne("ApiForBaseWeaknesses.Models.Vulnerability", "Vulnerability")
                        .WithMany("References")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vulnerability");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Scan", b =>
                {
                    b.HasOne("ApiForBaseWeaknesses.Models.Host", "Host")
                        .WithMany("Scans")
                        .HasForeignKey("HostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Host");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.ScanVulnerability", b =>
                {
                    b.HasOne("ApiForBaseWeaknesses.Models.Scan", "Scan")
                        .WithMany("ScanVulnerability")
                        .HasForeignKey("ScanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApiForBaseWeaknesses.Models.Vulnerability", "Vulnerability")
                        .WithMany()
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Scan");

                    b.Navigation("Vulnerability");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Host", b =>
                {
                    b.Navigation("Scans");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Scan", b =>
                {
                    b.Navigation("ScanVulnerability");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Vulnerability", b =>
                {
                    b.Navigation("CvssMetrics");

                    b.Navigation("References");
                });
#pragma warning restore 612, 618
        }
    }
}
