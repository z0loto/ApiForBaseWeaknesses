// <auto-generated />
using System;
using ApiForBaseWeaknesses;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ApiForBaseWeaknesses.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.CvssMetric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double?>("BaseScore")
                        .HasColumnType("double precision")
                        .HasColumnName("Base_Score");

                    b.Property<string>("Vector")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Vector");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)")
                        .HasColumnName("Version");

                    b.Property<int>("VulnerabilityId")
                        .HasColumnType("integer")
                        .HasColumnName("Vulnerability_Id");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("Cvss_Metrics", (string)null);
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Host", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Ip");

                    b.HasKey("Id");

                    b.HasIndex("Ip")
                        .IsUnique();

                    b.ToTable("Hosts");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Reference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Source");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Url");

                    b.Property<int>("VulnerabilityId")
                        .HasColumnType("integer")
                        .HasColumnName("Vulnerability_Id");

                    b.HasKey("Id");

                    b.HasIndex("VulnerabilityId");

                    b.ToTable("References");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Vulnerability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name");

                    b.Property<DateTime>("Published")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("Published");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Status");

                    b.HasKey("Id");

                    b.ToTable("Vulnerabilities");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.CvssMetric", b =>
                {
                    b.HasOne("ApiForBaseWeaknesses.Models.Vulnerability", "Vulnerability")
                        .WithMany("CvssMetrics")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vulnerability");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Reference", b =>
                {
                    b.HasOne("ApiForBaseWeaknesses.Models.Vulnerability", "Vulnerability")
                        .WithMany("References")
                        .HasForeignKey("VulnerabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vulnerability");
                });

            modelBuilder.Entity("ApiForBaseWeaknesses.Models.Vulnerability", b =>
                {
                    b.Navigation("CvssMetrics");

                    b.Navigation("References");
                });
#pragma warning restore 612, 618
        }
    }
}
